from quart import Quart, request
from telegram import Bot
import os
import asyncio
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TELEGRAM_BOT_TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')  # –¢–æ–∫–µ–Ω Telegram-–±–æ—Ç–∞
TELEGRAM_CHAT_ID = os.getenv('TELEGRAM_CHAT_ID')  # Chat ID –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Quart –∏ Telegram –±–æ—Ç–∞
app = Quart(__name__)
bot = Bot(token=TELEGRAM_BOT_TOKEN)

# –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
async def send_telegram_message_async(data):
    """
    –§–æ—Ä–º–∏—Ä—É–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram.
    """
    try:
        message = (
            "<b>üîî –ù–æ–≤–∞—è –∫–æ–Ω–≤–µ—Ä—Å–∏—è!</b>\n\n"  # –ñ–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç —Å —ç–º–æ–¥–∑–∏
            f"üìå –û—Ñ—Ñ–µ—Ä: {data.get('offer_id', 'N/A')}\n"
            f"üõ† –ü–æ–¥—Ö–æ–¥: {data.get('sub_id3', 'N/A')}\n"
            f"üìä –¢–∏–ø –∫–æ–Ω–≤–µ—Ä—Å–∏–∏: {data.get('goal', 'N/A')}\n"
            f"‚öôÔ∏è –°—Ç–∞—Ç—É—Å –∫–æ–Ω–≤–µ—Ä—Å–∏–∏: {data.get('status', 'N/A')}\n"
            f"ü§ë –í—ã–ø–ª–∞—Ç–∞: {data.get('revenue', 'N/A')} {data.get('currency', 'N/A')}\n"
            f"üéØ –ö–∞–º–ø–∞–Ω–∏—è: {data.get('sub_id4', 'N/A')}\n"
            f"üéØ –ê–¥—Å–µ—Ç: {data.get('sub_id5', 'N/A')}\n"
            f"‚è∞ –í—Ä–µ–º—è –∫–æ–Ω–≤–µ—Ä—Å–∏–∏: {data.get('conversion_date', 'N/A')}"
        )
        await bot.send_message(chat_id=TELEGRAM_CHAT_ID, text=message, parse_mode='HTML')
        logger.info("–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram.")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram: {e}")

# –≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ GET –∏ POST –∑–∞–ø—Ä–æ—Å–æ–≤
@app.route('/webhook', methods=['GET', 'POST'])
async def webhook():
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç GET –∏ POST –∑–∞–ø—Ä–æ—Å—ã.
    """
    try:
        if request.method == 'POST':
            data = await request.json  # –î–∞–Ω–Ω—ã–µ –∏–∑ POST-–∑–∞–ø—Ä–æ—Å–∞
        else:
            data = request.args  # –î–∞–Ω–Ω—ã–µ –∏–∑ GET-–∑–∞–ø—Ä–æ—Å–∞

        # –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram
        message_data = {
            'offer_id': data.get('offer_id', 'N/A'),
            'sub_id_3': data.get('sub_id3', 'N/A'),
            'goal': data.get('goal', 'N/A'),
            'status': data.get('status', 'N/A'),
            'revenue': data.get('revenue', 'N/A'),
            'currency': data.get('currency', 'N/A'),
            'sub_id_4': data.get('sub_id4', 'N/A'),
            'sub_id_5': data.get('sub_id5', 'N/A'),
            'conversion_date': data.get('conversion_date', 'N/A')
        }

        # –ó–∞–ø—É—Å–∫–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é –∑–∞–¥–∞—á—É
        await send_telegram_message_async(message_data)
        return 'OK', 200
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return 'Internal Server Error', 500

# –≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è favicon.ico
@app.route('/favicon.ico')
async def favicon():
    return '', 204  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç

# –ó–∞–ø—É—Å–∫ Quart-—Å–µ—Ä–≤–µ—Ä–∞
if __name__ == '__main__':
    port = int(os.getenv('PORT', 5000))  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ—Ä—Ç –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ 5000 –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    app.run(host='0.0.0.0', port=port)
